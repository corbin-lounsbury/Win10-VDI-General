source "vsphere-iso" "autogenerated_1" {
  CPUs                  = "${var.vm-cpu-num}"
  RAM                   = "${var.vm-mem-size}"
  cluster               = "${var.vsphere-cluster}"
  communicator          = "winrm"
  convert_to_template   = "${var.template-bool}"
  datacenter            = "${var.vsphere-datacenter}"
  datastore             = "${var.vsphere-datastore}"
  disk_controller_type  = ["lsilogic-sas"]
  storage {
    disk_size = "${var.vm-disk-size}"
    disk_thin_provisioned = true
    }
  firmware              = "efi-secure"
  floppy_files          = ["./win10.vdi/autounattend.xml", "./scripts/disable-network-discovery.cmd", "./scripts/enable-rdp.cmd", "./scripts/enable-winrm.ps1", "./scripts/install-vm-tools.cmd", "./scripts/set-temp.ps1", "./scripts/applications/Office19Configuration.xml"]
  folder                = "${var.vsphere-folder}"
  guest_os_type         = "windows9_64Guest"
  insecure_connection   = "true"
  iso_paths             = ["${var.os_iso_path}", "${var.vmtools_iso_path}"]
  network_adapters {
    network = "${var.vsphere-network}"
    network_card = "vmxnet3"
  }
  password              = "${var.vsphere-password}"
  username              = "${var.vsphere-user}"
  vcenter_server        = "${var.vsphere-server}"
  vm_name               = "${var.vm-name}"
  winrm_password        = "${var.winadmin-password}"
  winrm_username        = "Administrator"
  winrm_use_ssl         = "false"
  winrm_insecure        = "true"
  boot_command          = ["<spacebar>"]
  boot_wait             = "1s"
  remove_cdrom          = true
  // shutdown_command   = "shutdown /s /t 5 /f /d p:4:1 /c \"Packer Shutdown\""
  shutdown_timeout      = "30m"
}

build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "powershell" {
    script = "./scripts/win-update.ps1"
  }
  provisioner "windows-restart" {
    max_retries = 6
  }
    provisioner "powershell" {
    script = "./scripts/applications/prepare-appinstall.ps1"
  }
  provisioner "powershell" {
    script = "./scripts/applications/install-off2019.ps1"
  }
    provisioner "powershell" {
    script = "./scripts/applications/install-generalApps.ps1"
  }
  provisioner "powershell" { //pass 1. Installs prereqs
    script = "./scripts/applications/install-horizonAgent.ps1"
  }
  provisioner "windows-restart" {
    max_retries = 6
  }
}
